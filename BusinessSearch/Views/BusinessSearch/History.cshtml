@model BusinessSearch.Models.ViewModels.SearchHistoryViewModel
@{
    ViewData["Title"] = "Search History";
}

<div class="container py-4">
    <!-- Add this at the top for the batch actions toolbar -->
    <div id="batchSelectionToolbar" class="position-fixed bottom-0 start-0 end-0 bg-dark text-white py-3 px-4 d-none" style="z-index: 1030;">
        <div class="container">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <span id="selectedCount" class="badge bg-primary rounded-pill px-3 py-2 me-2">0</span>
                    <span>items selected</span>
                </div>
                <div>
                    <button type="button" id="batchViewBtn" class="btn btn-primary rounded-pill px-4">
                        <i class="fas fa-search me-2"></i>View Selected
                    </button>
                    <button type="button" id="batchDeleteBtn" class="btn btn-danger rounded-pill px-4 mx-2">
                        <i class="fas fa-trash me-2"></i>Delete Selected
                    </button>
                    <button type="button" id="clearSelectionBtn" class="btn btn-light rounded-pill px-4">
                        <i class="fas fa-times me-2"></i>Clear Selection
                    </button>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm border-0 rounded-3">
        <div class="card-body p-4">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="fw-bold mb-0">Search History</h2>
                <a href="@Url.Action("Index")" class="btn btn-primary rounded-pill px-4">
                    <i class="fas fa-search me-2"></i>New Search
                </a>
            </div>

            <!-- Filters -->
            <div class="card bg-light border-0 rounded-3 mb-4">
                <div class="card-body p-4">
                    <form method="get" class="row g-3">
                        <div class="col-md-4">
                            <label class="form-label fw-medium">Industry</label>
                            <input type="text" name="industryFilter" class="form-control form-control-lg border-0 bg-white rounded-pill" value="@Model.Filter.Industry">
                        </div>
                        <div class="col-md-4">
                            <label class="form-label fw-medium">Zip Code</label>
                            <input type="text" name="zipCodeFilter" class="form-control form-control-lg border-0 bg-white rounded-pill" value="@Model.Filter.ZipCode">
                        </div>
                        <div class="col-md-4 d-flex align-items-end">
                            <button type="submit" class="btn btn-primary rounded-pill px-4 me-2">
                                <i class="fas fa-filter me-2"></i>Apply Filters
                            </button>
                            <a href="@Url.Action("History")" class="btn btn-outline-secondary rounded-pill px-4">
                                <i class="fas fa-undo me-2"></i>Clear
                            </a>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Results Cards (Enhanced with Rating and Social Media) -->
            @if (!Model.Searches.Any())
            {
                <div class="text-center py-5">
                    <div class="text-muted mb-3">
                        <i class="fas fa-history fa-3x opacity-50"></i>
                    </div>
                    <p class="mb-1">No search history found</p>
                    <small>Try running a new search to see results here</small>
                </div>
            }
            else
            {
                <div class="row g-4">
                    @foreach (var search in Model.Searches)
                    {
                        <div class="col-md-6 col-lg-4">
                            <div class="card h-100 shadow-sm border-0 rounded-3 search-history-card @(search.TotalResults > 0 ? "" : "opacity-75")">
                                <!-- Checkbox for batch selection -->
                                <div class="position-absolute top-0 end-0 p-3" style="z-index: 2;">
                                    <div class="form-check">
                                        <input class="form-check-input search-checkbox"
                                               type="checkbox"
                                               id="search-@search.Id"
                                               data-search-id="@search.Id"
                                               data-has-results="@(search.TotalResults > 0 ? "true" : "false")"
                                        @(search.TotalResults > 0 ? "" : "disabled")>
                                    </div>
                                </div>

                                <div class="card-body p-4 d-flex flex-column">
                                    <div class="d-flex justify-content-between align-items-start mb-3">
                                        <h5 class="card-title mb-0 fw-bold">@search.Industry</h5>
                                        <span class="badge bg-light text-dark rounded-pill px-3">@search.TotalResults results</span>
                                    </div>

                                    <div class="mb-3">
                                        <div class="d-flex align-items-center text-muted mb-2">
                                            <i class="fas fa-calendar me-2"></i>
                                            <span class="small">@search.SearchDate.ToString("MM/dd/yyyy HH:mm")</span>
                                        </div>
                                        <div class="d-flex align-items-center text-muted">
                                            <i class="fas fa-map-marker-alt me-2"></i>
                                            <span class="small">@search.ZipCode</span>
                                        </div>
                                    </div>

                                    <!-- Enhanced Results Preview with Rating and Social Media -->
                                    @if (search.TotalResults > 0)
                                    {
                                        <div class="mb-3 flex-grow-1">
                                            <div class="text-center text-muted">
                                                <i class="fas fa-search fa-2x mb-2 opacity-50"></i>
                                                <p class="small">@search.TotalResults business results available</p>
                                                @if (search.TotalResults >= 5)
                                                {
                                                    <div class="d-flex justify-content-center gap-1 mb-2">
                                                        <span class="badge bg-success rounded-circle" style="width: 16px; height: 16px; font-size: 8px;" title="High-rated businesses likely">
                                                            <i class="fas fa-star"></i>
                                                        </span>
                                                        <span class="badge bg-primary rounded-circle" style="width: 16px; height: 16px; font-size: 8px;" title="Social media presence expected">
                                                            <i class="fab fa-facebook-f"></i>
                                                        </span>
                                                        <span class="badge bg-danger rounded-circle" style="width: 16px; height: 16px; font-size: 8px;" title="Multiple contact methods">
                                                            <i class="fas fa-phone"></i>
                                                        </span>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    }
                                    else if (search.TotalResults > 0)
                                    {
                                        <div class="text-center text-muted mb-3 flex-grow-1">
                                            <i class="fas fa-search fa-2x mb-2 opacity-50"></i>
                                            <p class="small">Results available to view</p>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="text-center text-muted mb-3 flex-grow-1">
                                            <i class="fas fa-exclamation-circle fa-2x mb-2 opacity-50"></i>
                                            <p class="small">No results found</p>
                                        </div>
                                    }

                                    <!-- Action Buttons -->
                                    <div class="mt-auto d-flex gap-2">
                                        @if (search.TotalResults > 0)
                                        {
                                            <a href="@Url.Action("ViewHistoricalResults", new { id = search.Id })"
                                               class="btn btn-primary btn-sm rounded-pill px-3 flex-grow-1">
                                                <i class="fas fa-search me-1"></i> View Results
                                            </a>
                                        }
                                        else
                                        {
                                            <button type="button" class="btn btn-outline-secondary btn-sm rounded-pill px-3 flex-grow-1 disabled">
                                                <i class="fas fa-search me-1"></i> No Results
                                            </button>
                                        }
                                        <button type="button" class="btn btn-outline-danger btn-sm rounded-pill px-3"
                                                onclick="confirmDelete(@search.Id)" title="Delete">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <!-- Pagination -->
                @if (Model.Pagination.TotalPages > 1)
                {
                    <div class="mt-4 d-flex justify-content-center">
                        <nav aria-label="Search history pagination">
                            <ul class="pagination pagination-md mb-0">
                                <li class="page-item @(!Model.Pagination.HasPreviousPage ? "disabled" : "")">
                                    <a class="page-link rounded-start-pill border-0" href="@Url.Action("History", new { page = Model.Pagination.CurrentPage - 1 })">
                                        <i class="fas fa-chevron-left small"></i>
                                    </a>
                                </li>
                                @for (int i = 1; i <= Model.Pagination.TotalPages; i++)
                                {
                                    <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                        <a class="page-link border-0" href="@Url.Action("History", new { page = i })">@i</a>
                                    </li>
                                }
                                <li class="page-item @(!Model.Pagination.HasNextPage ? "disabled" : "")">
                                    <a class="page-link rounded-end-pill border-0" href="@Url.Action("History", new { page = Model.Pagination.CurrentPage + 1 })">
                                        <i class="fas fa-chevron-right small"></i>
                                    </a>
                                </li>
                            </ul>
                        </nav>
                    </div>
                }
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title fw-bold">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <div class="text-danger mb-3">
                        <i class="fas fa-exclamation-circle fa-3x"></i>
                    </div>
                    <p>Are you sure you want to delete this search history entry?</p>
                    <p class="text-muted small">This action cannot be undone.</p>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light rounded-pill px-4" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger rounded-pill px-4">
                        <i class="fas fa-trash me-2"></i>Delete
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Batch Delete Modal -->
<div class="modal fade" id="batchDeleteModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content border-0 shadow">
            <div class="modal-header border-0">
                <h5 class="modal-title fw-bold">Confirm Multiple Deletes</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body p-4">
                <div class="text-center mb-3">
                    <div class="text-danger mb-3">
                        <i class="fas fa-exclamation-triangle fa-3x"></i>
                    </div>
                    <p>Are you sure you want to delete <span id="deleteCount">0</span> search history entries?</p>
                    <p class="text-muted small">This action cannot be undone.</p>
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-light rounded-pill px-4" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger rounded-pill px-4" onclick="batchDelete()">
                    <i class="fas fa-trash me-2"></i>Delete All Selected
                </button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        /* Styles for batch selection mode */
        .search-checkbox {
            transform: scale(1.25);
            cursor: pointer;
        }

        #batchSelectionToolbar {
            box-shadow: 0 -4px 10px rgba(0,0,0,0.1);
            transform: translateY(100%);
            transition: transform 0.3s ease-in-out;
        }

            #batchSelectionToolbar.show {
                transform: translateY(0);
            }

        /* Selected card styling */
        .search-history-card.selected {
            border: 2px solid #007bff;
            box-shadow: 0 0 8px rgba(0, 123, 255, 0.25);
        }

        /* Card hover effects */
        .search-history-card {
            transition: all 0.3s ease;
        }

            .search-history-card:hover {
                transform: translateY(-3px);
                box-shadow: 0 8px 25px rgba(0,0,0,0.15) !important;
            }

        /* Sample business card styling */
        .sample-business-card {
            border: 1px solid rgba(0,0,0,0.1);
            transition: all 0.2s ease;
        }

            .sample-business-card:hover {
                background-color: #fff !important;
                border-color: #007bff;
            }

        /* Star rating styling */
        .stars {
            display: inline-block;
            letter-spacing: 1px;
        }

            .stars .fa-star,
            .stars .fa-star-half-alt {
                color: #ffc107;
            }

        /* Badge styling for social media */
        .badge.rounded-circle {
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        /* Font Awesome icons */
        .fa, .fas, .far, .fab {
            font-family: "Font Awesome 5 Free", "Font Awesome 5 Brands" !important;
        }

        .fas, .fa {
            font-weight: 900 !important;
        }

        .far {
            font-weight: 400 !important;
        }

        .fab {
            font-family: "Font Awesome 5 Brands" !important;
            font-weight: 400 !important;
        }

        /* Pagination styling */
        .pagination .page-link {
            color: #2563EB;
            background-color: transparent;
            border-color: transparent;
            padding: 0.5rem 0.75rem;
            font-weight: 500;
        }

        .pagination .page-item.active .page-link {
            color: #fff;
            background-color: #2563EB;
        }

        .pagination .page-item.disabled .page-link {
            color: #6c757d;
            opacity: 0.5;
        }
    </style>
}

@section Scripts {
    <script>
        let selectedSearches = new Set();

        // Initialize when page loads
        document.addEventListener('DOMContentLoaded', () => {
            setupSearchCheckboxes();
        });

        function confirmDelete(id) {
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const form = document.getElementById('deleteForm');
            form.action = '@Url.Action("DeleteSearch")/' + id;
            modal.show();
        }

        function setupSearchCheckboxes() {
            // Individual checkboxes handler
            const checkboxes = document.querySelectorAll('.search-checkbox');
            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function() {
                    const searchId = this.dataset.searchId;
                    const card = this.closest('.search-history-card');

                    if (this.checked) {
                        selectedSearches.add(searchId);
                        card.classList.add('selected');
                    } else {
                        selectedSearches.delete(searchId);
                        card.classList.remove('selected');
                    }

                    updateSelectionUI();
                });
            });

            // Add event handlers for batch action buttons
            document.getElementById('batchViewBtn').addEventListener('click', batchView);
            document.getElementById('batchDeleteBtn').addEventListener('click', showBatchDeleteModal);
            document.getElementById('clearSelectionBtn').addEventListener('click', clearSelection);
        }

        function updateSelectionUI() {
            const selectionCount = selectedSearches.size;
            const toolbar = document.getElementById('batchSelectionToolbar');
            const countDisplay = document.getElementById('selectedCount');

            // Update counts
            countDisplay.textContent = selectionCount;

            // Show/hide toolbar
            if (selectionCount > 0) {
                toolbar.classList.remove('d-none');
                toolbar.classList.add('show');
            } else {
                toolbar.classList.remove('show');
                setTimeout(() => {
                    if (selectedSearches.size === 0) {
                        toolbar.classList.add('d-none');
                    }
                }, 300);
            }
        }

        function clearSelection() {
            selectedSearches.clear();

            // Uncheck all checkboxes
            document.querySelectorAll('.search-checkbox').forEach(checkbox => {
                checkbox.checked = false;
                checkbox.closest('.search-history-card').classList.remove('selected');
            });

            // Update UI
            updateSelectionUI();
        }

        function batchView() {
            if (selectedSearches.size === 0) {
                showAlert('error', 'Please select at least one search result to view');
                return;
            }

            if (selectedSearches.size === 1) {
                // If only one item selected, redirect to its view page
                const searchId = Array.from(selectedSearches)[0];
                window.location.href = '@Url.Action("ViewHistoricalResults")/' + searchId;
            } else {
                // For multiple selections, we need a new endpoint
                window.location.href = '@Url.Action("ViewMultipleHistoricalResults")?ids=' + Array.from(selectedSearches).join(',');
            }
        }

        function showBatchDeleteModal() {
            if (selectedSearches.size === 0) {
                showAlert('error', 'Please select at least one search history entry to delete');
                return;
            }

            // Update the count in the modal
            document.getElementById('deleteCount').textContent = selectedSearches.size;

            // Show the modal
            const modal = new bootstrap.Modal(document.getElementById('batchDeleteModal'));
            modal.show();
        }

        async function batchDelete() {
            try {
                const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

                // Create request payload
                const formData = {
                    searchIds: Array.from(selectedSearches)
                };

                // Make API call to delete multiple searches
                const response = await fetch('@Url.Action("DeleteMultipleSearches")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    },
                    body: JSON.stringify(formData)
                });

                const result = await response.json();

                if (result.success) {
                    // Hide the modal
                    const modal = bootstrap.Modal.getInstance(document.getElementById('batchDeleteModal'));
                    modal.hide();

                    // Show success message
                    showAlert('success', `Successfully deleted ${result.deletedCount} search history entries`);

                    // Reload the page to see the changes
                    setTimeout(() => {
                        window.location.reload();
                    }, 1000);
                } else {
                    throw new Error(result.message || 'Failed to delete search history entries');
                }
            } catch (error) {
                console.error('Error in batchDelete:', error);
                showAlert('error', error.message || 'An error occurred while processing your request');
            }
        }

        function showAlert(type, message) {
            const alertDiv = document.createElement('div');
            alertDiv.classList.add('alert', `alert-${type === 'error' ? 'danger' : type}`, 'alert-dismissible', 'fade', 'show',
            'position-fixed', 'top-0',
            'end-0', 'm-3', 'rounded-3');
            alertDiv.style.zIndex = '9999';

            const icon = type === 'success' ? 'check-circle' : 'exclamation-circle';

            alertDiv.innerHTML = `
                <div class="d-flex align-items-center">
                    <i class="fas fa-${icon} me-2"></i>
                    ${message}
                </div>
                <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
            `;
            document.body.appendChild(alertDiv);
            setTimeout(() => alertDiv.remove(), 5000);
        }
    </script>
}