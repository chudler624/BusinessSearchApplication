@model BusinessSearch.Models.ViewModels.OrganizationDetailsViewModel
@using BusinessSearch.Models.Organization
@{
    ViewData["Title"] = "Organization Management";
}

<div class="container py-4">
    <div class="card shadow-sm border-0 rounded-3 mb-4">
        <div class="card-body p-4">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="fw-bold mb-1">@Model.Name</h1>
                    <div class="text-muted">
                        Current Plan: <span class="badge bg-primary rounded-pill px-3">@Model.Plan.GetDisplayName()</span>
                    </div>
                </div>
                <div>
                    <a href="@Url.Action("Settings", "Organization")" class="btn btn-outline-primary rounded-pill px-4">
                        <i class="fas fa-cog"></i> Settings
                    </a>
                </div>
            </div>

            <!-- Search Usage Section -->
            <div class="card bg-light border-0 rounded-3 mb-4">
                <div class="card-body p-3">
                    <h5 class="fw-bold mb-3">Search Usage</h5>
                    <div class="row align-items-center">
                        <div class="col-md-7">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Today's Usage:</span>
                                <span class="fw-medium">@Model.SearchUsage.UsedToday / @Model.SearchUsage.DailyLimit searches</span>
                            </div>
                            <div class="progress mb-2 rounded-pill" style="height: 8px;">
                                @{
                                    var usagePercentage = (Model.SearchUsage.UsedToday * 100.0) / Model.SearchUsage.DailyLimit;
                                    var progressClass = usagePercentage > 90 ? "bg-danger" :
                                    usagePercentage > 70 ? "bg-warning" : "bg-primary";
                                }
                                <div class="progress-bar @progressClass" role="progressbar"
                                     style="width: @usagePercentage%"></div>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="text-md-end">
                                <p class="mb-1 fw-medium">Searches Remaining Today: @Model.SearchUsage.Remaining</p>
                                <small class="text-muted">Resets at @Model.SearchUsage.NextReset.ToString("HH:mm") UTC</small>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="row g-4">
                <!-- Team Members Section -->
                <div class="col-lg-8">
                    <div class="card border-0 shadow-sm rounded-3 h-100">
                        <div class="card-header bg-white border-0 py-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="fw-bold mb-0">Team Members (@Model.UserCount)</h5>
                            </div>
                        </div>
                        <div class="card-body p-0">
                            <div class="table-responsive">
                                <table class="table table-hover mb-0">
                                    <thead class="table-light">
                                        <tr>
                                            <th class="px-4">Name</th>
                                            <th>Email</th>
                                            <th>Role</th>
                                            <th>Joined</th>
                                            <th class="text-end pe-4">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var member in Model.Members)
                                        {
                                            <tr>
                                                <td class="px-4">@member.Name</td>
                                                <td>@member.Email</td>
                                                <td>
                                                    @if (Model.IsCurrentUserAdmin)
                                                    {
                                                        <select class="form-select form-select-sm rounded-pill border-0 bg-light"
                                                                data-user-id="@member.Id"
                                                                onchange="updateUserRole(this)">
                                                            <option value="Member" selected="@(member.Role == "Member")">Member</option>
                                                            <option value="Admin" selected="@(member.Role == "Admin")">Admin</option>
                                                        </select>
                                                    }
                                                    else
                                                    {
                                                        <span>@member.Role</span>
                                                    }
                                                </td>
                                                <td>@member.JoinedDate.ToString("MMM dd, yyyy")</td>
                                                <td class="text-end pe-4">
                                                    @if (Model.IsCurrentUserAdmin || member.Id == Model.CurrentUserId)
                                                    {
                                                        <button class="btn btn-sm btn-outline-danger rounded-pill px-3"
                                                                onclick="removeUser('@member.Id')">
                                                            Remove
                                                        </button>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Invites Section -->
                <div class="col-lg-4">
                    <div class="card border-0 shadow-sm rounded-3 h-100">
                        <div class="card-header bg-white border-0 py-3">
                            <div class="d-flex justify-content-between align-items-center">
                                <h5 class="fw-bold mb-0">Organization Invites</h5>
                            </div>
                        </div>
                        <div class="card-body">
                            @if (Model.IsCurrentUserAdmin)
                            {
                                <div class="d-grid mb-4">
                                    <button class="btn btn-primary rounded-pill" data-bs-toggle="modal" data-bs-target="#generateInviteModal">
                                        <i class="fas fa-plus-circle me-1"></i> Generate New Invite
                                    </button>
                                </div>
                            }

                            @if (!Model.ActiveInvites.Any())
                            {
                                <div class="text-center py-4">
                                    <div class="text-muted mb-2">
                                        <i class="fas fa-envelope-open fa-3x opacity-50"></i>
                                    </div>
                                    <p class="text-muted">No active invites</p>
                                </div>
                            }
                            else
                            {
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead class="table-light">
                                            <tr>
                                                <th>Code</th>
                                                <th>Role</th>
                                                <th>Expires</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var invite in Model.ActiveInvites)
                                            {
                                                <tr>
                                                    <td><code class="bg-light px-2 py-1 rounded">@invite.InviteCode</code></td>
                                                    <td>@invite.Role</td>
                                                    <td>@invite.ExpiryDate.ToString("MMM dd")</td>
                                                    <td class="text-end">
                                                        @if (Model.IsCurrentUserAdmin)
                                                        {
                                                            <button class="btn btn-sm btn-outline-danger rounded-circle"
                                                                    onclick="deactivateInvite('@invite.InviteCode')">
                                                                <i class="fas fa-times"></i>
                                                            </button>
                                                        }
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Generate Invite Modal -->
@if (Model.IsCurrentUserAdmin)
{
    <div class="modal fade" id="generateInviteModal" tabindex="-1">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content border-0 shadow">
                <div class="modal-header border-0">
                    <h5 class="modal-title fw-bold">Generate New Invite</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body p-4">
                    <div class="mb-4">
                        <label for="roleSelect" class="form-label">Select Role</label>
                        <select class="form-select form-control-lg border-0 bg-light" id="roleSelect">
                            <option value="Member">Member</option>
                            <option value="Admin">Admin</option>
                        </select>
                    </div>
                    <div id="inviteCodeResult" class="d-none">
                        <div class="alert alert-success border-0 bg-light border-start border-4 border-success">
                            <p class="mb-2">Invite Code Generated:</p>
                            <div class="bg-white p-3 rounded text-center">
                                <code class="fs-5 user-select-all" id="generatedInviteCode"></code>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="button" class="btn btn-light rounded-pill px-4" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary rounded-pill px-4" onclick="generateInvite()">Generate</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        function generateInvite() {
            const role = document.getElementById('roleSelect').value;

            $.ajax({
                url: '@Url.Action("GenerateInvite", "Organization")',
                type: 'POST',
                data: { role: role },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    if (data.success) {
                        $('#generatedInviteCode').text(data.inviteCode);
                        $('#inviteCodeResult').removeClass('d-none');
                    } else {
                        alert('Error generating invite: ' + data.message);
                    }
                },
                error: function () {
                    alert('Error generating invite code');
                }
            });
        }

        function updateUserRole(select) {
            const userId = $(select).data('user-id');
            const role = $(select).val();

            $.ajax({
                url: '@Url.Action("UpdateUserRole", "Organization")',
                type: 'POST',
                data: { userId: userId, role: role },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    if (!data.success) {
                        alert('Error updating role: ' + data.message);
                    }
                },
                error: function () {
                    alert('Error updating user role');
                }
            });
        }

        function removeUser(userId) {
            if (!confirm('Are you sure you want to remove this user?')) {
                return;
            }

            $.ajax({
                url: '@Url.Action("RemoveUser", "Organization")',
                type: 'POST',
                data: { userId: userId },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert('Error removing user: ' + data.message);
                    }
                },
                error: function () {
                    alert('Error removing user');
                }
            });
        }

        function deactivateInvite(inviteCode) {
            if (!confirm('Are you sure you want to deactivate this invite?')) {
                return;
            }

            $.ajax({
                url: '@Url.Action("DeactivateInvite", "Organization")',
                type: 'POST',
                data: { inviteCode: inviteCode },
                headers: {
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (data) {
                    if (data.success) {
                        window.location.reload();
                    } else {
                        alert('Error deactivating invite: ' + data.message);
                    }
                },
                error: function () {
                    alert('Error deactivating invite');
                }
            });
        }
    </script>
}